name: Deploy Django App

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install coverage

      - name: Run tests with coverage
        env:
          DEBUG: True
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
        run: |
          coverage run --source='.' manage.py test
          coverage report -m
          coverage xml

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  deploy:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SERVER_SSH_KEY }}

      - name: Test SSH connection
        env:
          SERVER_HOST: ${{ secrets.SERVER_HOST }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
        run: |
          echo "Testing SSH connection to ${SERVER_USER}@${SERVER_HOST}"
          
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Ö–æ—Å—Ç –¥–æ—Å—Ç—É–ø–µ–Ω
          if ping -c 1 ${SERVER_HOST} &> /dev/null; then
            echo "‚úÖ Host ${SERVER_HOST} is reachable"
          else
            echo "‚ùå Host ${SERVER_HOST} is not reachable"
            echo "Please check:"
            echo "1. –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –ª–∏ IP –∞–¥—Ä–µ—Å –≤ secrets.SERVER_HOST"
            echo "2. –û—Ç–∫—Ä—ã—Ç –ª–∏ –ø–æ—Ä—Ç 22 –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ"
            echo "3. –†–∞–±–æ—Ç–∞–µ—Ç –ª–∏ SSH —Å–µ—Ä–≤–µ—Ä"
            exit 1
          fi
          
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º SSH –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
          if ssh -o BatchMode=yes -o ConnectTimeout=5 ${SERVER_USER}@${SERVER_HOST} "echo 'SSH connection successful'"; then
            echo "‚úÖ SSH connection successful"
          else
            echo "‚ùå SSH connection failed"
            echo "Please check:"
            echo "1. –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ secrets.SERVER_USER"
            echo "2. –î–æ–±–∞–≤–ª–µ–Ω –ª–∏ SSH –∫–ª—é—á –≤ authorized_keys –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ"
            echo "3. –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –ª–∏ –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á –≤ secrets.SERVER_SSH_KEY"
            exit 1
          fi

      - name: Simple deployment verification
        env:
          SERVER_HOST: ${{ secrets.SERVER_HOST }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
        run: |
          echo "Running simple deployment verification..."
          
          # –ü—Ä–æ—Å—Ç–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã
          ssh -o StrictHostKeyChecking=no ${SERVER_USER}@${SERVER_HOST} "
            echo '=== Server Information ==='
            echo 'Hostname: $(hostname)'
            echo 'IP address: $(hostname -I)'
            echo 'Uptime: $(uptime)'
            echo 'Python: $(python3 --version 2>/dev/null || echo \"Not installed\")'
            echo 'Git: $(git --version 2>/dev/null || echo \"Not installed\")'
            echo '=========================='
          "
          
          echo "‚úÖ Deployment verification completed successfully!"

      - name: Create deployment marker
        env:
          SERVER_HOST: ${{ secrets.SERVER_HOST }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
        run: |
          echo "Creating deployment marker..."
          
          # –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª-–º–∞—Ä–∫–µ—Ä —É—Å–ø–µ—à–Ω–æ–≥–æ –¥–µ–ø–ª–æ—è
          ssh ${SERVER_USER}@${SERVER_HOST} "
            DEPLOY_DIR=\"/home/\$(whoami)/deployments\"
            mkdir -p \$DEPLOY_DIR
            echo 'Deployment successful at $(date)' > \$DEPLOY_DIR/deployment_${{ github.run_id }}.txt
            echo 'Commit: ${{ github.sha }}' >> \$DEPLOY_DIR/deployment_${{ github.run_id }}.txt
            echo 'Branch: ${{ github.ref }}' >> \$DEPLOY_DIR/deployment_${{ github.run_id }}.txt
            echo 'Created deployment marker: \$DEPLOY_DIR/deployment_${{ github.run_id }}.txt'
          "

      - name: Final success message
        run: |
          echo "üéâ All deployment steps completed successfully!"
          echo "üìã Summary:"
          echo "  - Tests passed ‚úÖ"
          echo "  - SSH connection working ‚úÖ" 
          echo "  - Server verification completed ‚úÖ"
          echo "  - Deployment marker created ‚úÖ"
          echo ""
          echo "Next steps for full deployment:"
          echo "1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Python –∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ"
          echo "2. –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö PostgreSQL"
          echo "3. –ù–∞—Å—Ç—Ä–æ–∏—Ç—å Nginx + Gunicorn"
          echo "4. –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –¥–æ–º–µ–Ω–Ω–æ–µ –∏–º—è"