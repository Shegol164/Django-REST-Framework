name: Deploy Django App

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install coverage

      - name: Run tests with coverage
        env:
          DEBUG: True
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
        run: |
          coverage run --source='.' manage.py test
          coverage report -m
          coverage xml

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  deploy:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check if secrets are configured
        id: check-secrets
        run: |
          if [ -z "${{ secrets.SERVER_SSH_KEY }}" ]; then
            echo "SSH key secret is not configured"
            echo "skip_deploy=true" >> $GITHUB_OUTPUT
          else
            echo "SSH key secret is configured"
            echo "skip_deploy=false" >> $GITHUB_OUTPUT
          fi

      - name: Setup SSH
        if: steps.check-secrets.outputs.skip_deploy == 'false'
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SERVER_SSH_KEY }}

      - name: Deploy to production server
        if: steps.check-secrets.outputs.skip_deploy == 'false'
        env:
          SERVER_HOST: ${{ secrets.SERVER_HOST }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
        run: |
          echo "Starting deployment to ${SERVER_HOST}"
          ssh -o StrictHostKeyChecking=no ${SERVER_USER}@${SERVER_HOST} << 'EOF'
            cd /home/django_app/Django_REST_Framework
            echo "Pulling latest changes from main branch..."
            git pull origin main
            echo "Activating virtual environment..."
            source venv/bin/activate
            echo "Installing dependencies..."
            pip install -r requirements.txt
            echo "Applying migrations..."
            python manage.py migrate
            echo "Collecting static files..."
            python manage.py collectstatic --noinput
            echo "Restarting services..."
            sudo systemctl restart gunicorn
            sudo systemctl restart nginx
            echo "Deployment completed successfully!"
          EOF

      - name: Skip deployment (secrets not configured)
        if: steps.check-secrets.outputs.skip_deploy == 'true'
        run: |
          echo "Skipping deployment because SSH secrets are not configured"
          echo "To enable deployment, configure the following secrets in GitHub:"
          echo "- SERVER_SSH_KEY: Your private SSH key"
          echo "- SERVER_HOST: Server IP/hostname"
          echo "- SERVER_USER: SSH username"